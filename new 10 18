#import libraries
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

#import the csv file
df = pd.read_csv('nfl_betting.csv')

#remove the weather detail column because it is unstructred free text
#remove games that did not have a betting line and have not occured
new_df = df.drop(['weather_detail','schedule_date'], axis = 1).dropna(subset = ['over_under_line', 'score_home'])

#replace text w/ numbers for the week 
new_df = new_df.replace(['Wildcard', 'WildCard','Division', 'Conference', 'Superbowl','SuperBowl'],[18,18,19,20,21,21])
#find what the column type is (convert everything to float>> new_df.dtypes

#convert 'schedule_week' from object to float
new_df['schedule_week'] = new_df.schedule_week.astype(float)

#new_df['over_under_line'] = new_df['over_under_line'].convert_objects(convert_numeric=True)
pd.to_numeric(new_df['over_under_line'])

#split the columns into independent and dependent variables then recombine
#dependent variable is in the middle of independent variables
x1 = new_df.iloc[:,0:11]
x2 = new_df.iloc[:,13:15]
x = pd.merge(x1, x2, left_index=True, right_index=True).values

#create over under line as independent variable
y = new_df['score_home'] + new_df['score_away']

#get the average temp by week
#new_df.fillna(['weather_temperature']).mean()
new_df.groupby(['schedule_week']).mean()

#remove any additional blank cells with an average
from sklearn.preprocessing import Imputer
imputer = Imputer(missing_values = 'NaN', strategy = 'mean', axis = 0)

#fit the object to the matrix x
imputer = imputer.fit(x[:,8:11])

#replace the missing values
x[:,8:11] = imputer.transform(x[:,8:11])
x[1,:]

#encode categorical variables
from sklearn.preprocessing import LabelEncoder, OneHotEncoder
labelencoder_x = LabelEncoder()
x[:,2] = labelencoder_x.fit_transform(x[:,2])
x[:,3] = labelencoder_x.fit_transform(x[:,3])
x[:,4] = labelencoder_x.fit_transform(x[:,4])
x[:,5] = labelencoder_x.fit_transform(x[:,5])
x[:,11] = labelencoder_x.fit_transform(x[:,11])
x[:,12] = labelencoder_x.fit_transform(x[:,12])
x[1,:]
import csv
new_csv = csv.writer()

onehotencoder = OneHotEncoder(categorical_features = [2])
x = onehotencoder.fit_transform(x).toarray()
onehotencoder
